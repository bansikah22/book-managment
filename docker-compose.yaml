version: '3.8'

services:
  traefik:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"  # Enable the Traefik dashboard
      - "--providers.docker=true"  # Enable Docker provider
      - "--entrypoints.web.address=:80"  # Define entrypoint for HTTP
      #- "--entrypoints.web.proxy.bodySizeLimit=10M" 
    ports:
      - "80:80"  # Expose Traefik on port 80
      - "8080:8080"  # Expose Traefik dashboard on port 8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"  # Allow Traefik to access Docker socket
    networks:
      - book-net

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - book-net

  book-backend:
    image: bansikah/book-backend:1.1
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.book-backend.rule=Host(`backend.localhost`)" 
      - "traefik.http.services.book-backend.loadbalancer.server.port=8082"
    networks:
      - book-net

  book-frontend:
    image: bansikah/book-frontend:1.1
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.book-frontend.rule=Host(`frontend.localhost`)" 
      - "traefik.http.services.book-frontend.loadbalancer.server.port=80"
    networks:
      - book-net

  watchtower:
    image: containrrr/watchtower:latest
    command: >
      --cleanup
      --interval 60
      --notification-slack-hook-url ${DISCORD_WEBHOOK_URL}
      --no-pull 
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - book-net

networks:
  book-net:

volumes:
  postgres_data:
